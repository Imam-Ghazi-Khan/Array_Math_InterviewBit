public class Solution {
    public int[] plusOne(int[] A) {
        if(A.length==1){
            int O[] = new int[1];
            O[0] = A[0]+1;
            if(O[0]==10){
                int IO[] = new int[2];
                IO[0] = 1;
                IO[1] = 0;
                return IO;
            }
            return O;
        }
        boolean all9 = true;
        int n = A.length;
        A[n-1] = A[n-1]+1;
        int carry = 0;
        if(A[n-1]>9) {
            A[n-1] = A[n-1]%10;
            carry = 1;
        }
        for(int i = n-2; i >= 0; i--){
            if(A[i]!=9) all9 = false;
            A[i] = A[i]+carry;
            if(A[i]>9){
                A[i] = A[i]%10;
                carry = 1;
            }
            else{
                carry = 0;
            }
        }
        if(all9){
            int B[] = new int[n+1];
            B[0] = 1;
            for(int i = 1; i <= n; i++){
                B[i] = A[i-1];
            }
            return B;
        }
        if(A[0]==0){
            int count = 0;
            while(A[count]==0 && count<A.length)
            {
                count++;
            }

            int C[] = new int[n-count];
            for(int i = count; i<n;i++){
                C[i-count] = A[i];
            }
            return C;
        }
        return A;
    }
}
